#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:pen="http://www.pentaho.com/xml/schemas/pentaho-blueprint"
           xsi:schemaLocation="
            http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
            http://www.pentaho.com/xml/schemas/pentaho-blueprint http://www.pentaho.com/xml/schemas/pentaho-blueprint.xsd">

  <bean id="${plugin_class_name}Meta" class="${package}.trans.steps.${rootArtifactId}.${plugin_class_name}Meta" scope="prototype">
    <pen:di-plugin type="org.pentaho.di.core.plugins.StepPluginType"/>

    <!-- Reference the extra class for the StepData -->
    <pen:di-plugin-mapping class="org.pentaho.di.trans.step.StepDataInterface" ref="${plugin_class_name}Data"/>
  </bean>

  <bean id="${plugin_class_name}Data" class="${package}.trans.steps.${rootArtifactId}.${plugin_class_name}Data" scope="prototype"/>

  <!-- Define a bean for our new step analyzer -->
  <bean id="${plugin_class_name}StepAnalyzer" class="${package}.trans.steps.${rootArtifactId}.${plugin_class_name}StepAnalyzer" />

  <!--
    Define our analyzer as a service. This will allow it to be automatically added to the reference-list ultimately used
    by the TransformationAnalyzer to determine if there is a custom analyzer for a particular BaseStepMeta impl
    (${plugin_class_name}Meta in this case).
  -->
  <service id="${plugin_class_name}StepAnalyzerService"
           interface="org.pentaho.metaverse.api.analyzer.kettle.step.IStepAnalyzer"
           ref="${plugin_class_name}StepAnalyzer"/>

</blueprint>
