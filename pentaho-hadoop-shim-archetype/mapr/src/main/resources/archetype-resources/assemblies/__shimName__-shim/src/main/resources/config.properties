#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
${symbol_pound} Friendly name for this configuration
name=MapR ${shimVersion}

${symbol_pound} Comma-separated list of directories and files to make available to this
${symbol_pound} configuration on linux. Any resources found here will overwrite ones in lib/.
${symbol_pound} Current classpath was received from running "hadoop classpath" and concating ${symbol_dollar}{PENTAHO_INSTALLED_DIR}/design-tools/data-integration/plugins/pentaho-big-data-plugin/hadoop-configurations/${shimName},/opt/mapr/lib
${symbol_pound} For example:
linux.classpath=/opt/mapr/hadoop/hadoop-2.7.0/etc/hadoop,/opt/mapr/hadoop/hadoop-2.7.0/etc/hadoop,/opt/mapr/hadoop/hadoop-2.7.0/share/hadoop/common/lib,/opt/mapr/hadoop/hadoop-2.7.0/share/hadoop/common,/opt/mapr/hadoop/hadoop-2.7.0/share/hadoop/hdfs,/opt/mapr/hadoop/hadoop-2.7.0/share/hadoop/hdfs/lib,/opt/mapr/hadoop/hadoop-2.7.0/share/hadoop/yarn/lib,/opt/mapr/hadoop/hadoop-2.7.0/share/hadoop/yarn,/opt/mapr/hadoop/hadoop-2.7.0/share/hadoop/mapreduce/lib,/opt/mapr/hadoop/hadoop-2.7.0/share/hadoop/mapreduce,/opt/mapr/sqoop/sqoop-1.4.6,/opt/mapr/sqoop/sqoop-1.4.6/lib,/contrib/capacity-scheduler,/opt/Pentaho/design-tools/data-integration/plugins/pentaho-big-data-plugin/hadoop-configurations/${shimName},/opt/mapr/lib


${symbol_pound} Comma-separated list of paths that contain native libraries to load. These
${symbol_pound} could be added to LD_LIBRARY_PATH or set with -Djava.library.path instead.
linux.library.path=/opt/mapr/lib

${symbol_pound} Comma-separated list of classes or package names to explicitly ignore when
${symbol_pound} loading classes from the resources within this Hadoop configuration directory
${symbol_pound} or the classpath property
${symbol_pound} e.g.: org.apache.commons.log,org.apache.log4j
${symbol_pound} Note, the two packages above are automatically included for all configurations
ignore.classes=

${symbol_pound} Comma-separated list of jars to explicitly ignore when
${symbol_pound} loading classes from the resources within this Hadoop configuration directory
${symbol_pound} or the classpath property
${symbol_pound} e.g.: without versions - xercesImpl,xml-apis or with versions - xercesImpl-2.12.2,xml-apis-1.3.04 or
${symbol_pound} with jar extension - xercesImpl-2.12.2.jar,xml-apis-1.3.04.jar
${symbol_pound} Note, the two jars above lead to libraries conflicts on Mapr 6.0 cluster so they are added to exclude.jars property below
exclude.jars=xercesImpl,xml-apis

${symbol_pound} These are Windows-specific classpath and library paths. 
${symbol_pound} Please make sure to update the MapR versions in the paths to match your
${symbol_pound} locally installed MapR client.
${symbol_pound} Make sure you have properly configured windows.classpath property (if you are using PDI on windows): The first entrance should be relative path to lib/hadoop2-windows-patch-08072014.jar
windows.classpath=file:///C:/opt/mapr/conf,file:///C:/opt/mapr/hadoop/hadoop-0.20.2/lib
windows.library.path=C:${symbol_escape}${symbol_escape}opt${symbol_escape}${symbol_escape}mapr${symbol_escape}${symbol_escape}lib

java.system.hadoop.login=hybrid
java.system.mapr.library.flatclass=true

${symbol_pound} These classes will be instantiated using Class.forName().newInstance().
activator.classes=

${symbol_pound} Java will shutdown if these classes are not available.
${symbol_pound}required.classes=org.apache.hadoop.HadoopVersionAnnotation,org.apache.hadoop.security.authentication.client.AuthenticatedURL,com.mapr.log4j.CentralTaskLogAppender,mapr.fs.Replicationserver${symbol_dollar}InodeAllocationBmapMsgOrBuilder,com.mapr.fs.ShimLoader
